name: Create Release Binaries

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  create-release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.3'
        extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite, pdo_mysql, zip, gd, curl
        coverage: none
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Verify environment
      run: |
        echo "PHP Version: $(php --version)"
        echo "Node Version: $(node --version)"
        echo "NPM Version: $(npm --version)"
        echo "Composer Version: $(composer --version)"
        echo "Release Tag: ${GITHUB_REF#refs/tags/}"
        
    - name: Install PHP dependencies
      run: |
        composer install --optimize-autoloader --no-dev --no-interaction
        composer dump-autoload --optimize
      
    - name: Install Node dependencies and build assets
      run: |
        # Clear npm cache and remove lock file to handle dependency conflicts
        npm cache clean --force
        rm -f package-lock.json
        
        # Try npm install with legacy peer deps
        if ! npm install --legacy-peer-deps; then
          echo "npm install failed, trying with additional flags..."
          npm install --legacy-peer-deps --force
        fi
        
        # Build assets
        npm run build
        
        # Verify build was successful
        if [ ! -d "public/build" ]; then
          echo "Build directory not found, something went wrong with asset compilation"
          exit 1
        fi
      
    - name: Generate checksums
      run: |
        VERSION=${GITHUB_REF#refs/tags/}
        echo "Building release for version: $VERSION"
        
    - name: Prepare release files
      run: |
        VERSION=${GITHUB_REF#refs/tags/}
        
        # Create releases directory
        mkdir -p releases
        
        # Create production build
        mkdir -p releases/production
        
        # Copy files excluding development directories
        rsync -av \
          --exclude='node_modules' \
          --exclude='.git' \
          --exclude='tests' \
          --exclude='storage/logs/*.log' \
          --exclude='temp-release' \
          --exclude='releases' \
          --exclude='.vscode' \
          --exclude='*.tmp' \
          . releases/production/
        
        # Ensure storage directories exist with proper structure
        mkdir -p releases/production/storage/{app/public,framework/{cache/data,sessions,views},logs}
        touch releases/production/storage/app/public/.gitkeep
        touch releases/production/storage/framework/cache/data/.gitkeep
        touch releases/production/storage/framework/sessions/.gitkeep
        touch releases/production/storage/framework/views/.gitkeep
        touch releases/production/storage/logs/.gitkeep
        
        # Set proper permissions
        chmod -R 755 releases/production
        chmod -R 777 releases/production/storage releases/production/bootstrap/cache
        
        # Laravel optimizations
        cd releases/production
        php artisan config:cache
        php artisan route:cache
        php artisan view:cache
        cd ../..
        
    - name: Create release archives
      run: |
        VERSION=${GITHUB_REF#refs/tags/}
        cd releases
        
        # Production package
        zip -r "klioso-${VERSION}-production.zip" production/
        
        # Windows package (copy from production)
        cp -r production windows
        
        # Create Windows-specific files
        cat > windows/install.bat << 'EOF'
        @echo off
        echo 🪟 Klioso Windows Installation
        
        echo Setting up environment...
        if not exist .env copy .env.example .env
        
        echo Generating application key...
        php artisan key:generate --force
        
        echo Running database migrations...
        php artisan migrate --force
        
        echo Optimizing application...
        php artisan config:cache
        php artisan route:cache
        php artisan view:cache
        
        echo ✅ Installation complete!
        echo Configure your web server to point to the 'public' directory.
        pause
        EOF
        
        cat > windows/README-WINDOWS.md << EOF
        # Klioso ${VERSION} for Windows/Laragon
        
        ## Quick Start
        1. Extract this archive to your web directory
        2. Run install.bat as Administrator
        3. Edit .env file with your database settings
        4. Access via your web server
        
        ## Requirements
        - PHP 8.2+ (Laragon recommended)
        - MySQL 8+ or SQLite
        - Composer (optional for this package)
        
        ## Support
        Visit: https://github.com/nathanmaster/Klioso
        EOF
        
        zip -r "klioso-${VERSION}-windows.zip" windows/
        
        # Shared hosting package
        cp -r production shared-hosting
        
        # Create shared hosting .htaccess
        cat > shared-hosting/public/.htaccess << 'EOF'
        <IfModule mod_rewrite.c>
            <IfModule mod_negotiation.c>
                Options -MultiViews -Indexes
            </IfModule>
        
            RewriteEngine On
        
            # Handle Authorization Header
            RewriteCond %{HTTP:Authorization} .
            RewriteRule .* - [E=HTTP_AUTHORIZATION:%{HTTP:Authorization}]
        
            # Redirect Trailing Slashes If Not A Folder...
            RewriteCond %{REQUEST_FILENAME} !-d
            RewriteCond %{REQUEST_URI} (.+)/$
            RewriteRule ^ %1 [L,R=301]
        
            # Send Requests To Front Controller...
            RewriteCond %{REQUEST_FILENAME} !-d
            RewriteCond %{REQUEST_FILENAME} !-f
            RewriteRule ^ index.php [L]
        </IfModule>
        
        # Security headers
        <IfModule mod_headers.c>
            Header always set X-Frame-Options "SAMEORIGIN"
            Header always set X-Content-Type-Options "nosniff"
        </IfModule>
        EOF
        
        cat > shared-hosting/README-SHARED-HOSTING.md << EOF
        # Klioso ${VERSION} for Shared Hosting
        
        ## Installation
        1. Upload all files to your hosting account
        2. Move contents of 'public' directory to your domain's document root
        3. Edit .env file with database credentials
        4. Run migrations via hosting control panel or SSH
        
        ## Requirements
        - PHP 8.2+ with required extensions
        - MySQL 5.7+ or MariaDB 10.3+
        - SSL certificate recommended
        
        ## Support
        Visit: https://github.com/nathanmaster/Klioso
        EOF
        
        zip -r "klioso-${VERSION}-shared-hosting.zip" shared-hosting/
        
        # Generate checksums
        for file in klioso-${VERSION}-*.zip; do
          if [ -f "$file" ]; then
            sha256sum "$file" >> checksums.txt
          fi
        done
        
        # Source archive (from git)
        cd ..
        git archive --format=zip --prefix="klioso-${VERSION}/" HEAD > "releases/klioso-${VERSION}-source.zip"
        cd releases
        sha256sum "klioso-${VERSION}-source.zip" >> checksums.txt
        
    - name: Validate packages
      run: |
        VERSION=${GITHUB_REF#refs/tags/}
        cd releases
        
        echo "=== Release Package Validation ==="
        echo "Packages created:"
        ls -la klioso-${VERSION}-*.zip
        
        echo -e "\n=== Package Sizes ==="
        du -h klioso-${VERSION}-*.zip
        
        echo -e "\n=== Checksums ==="
        cat checksums.txt
        
        echo -e "\n=== Package Contents Verification ==="
        for package in klioso-${VERSION}-*.zip; do
          echo "Checking $package..."
          if unzip -t "$package" > /dev/null; then
            echo "✅ $package: ZIP integrity OK"
          else
            echo "❌ $package: ZIP integrity FAILED"
            exit 1
          fi
        done
        
        echo -e "\n=== All packages validated successfully! ==="
        
    - name: Generate release notes with commit info
      id: release_notes
      run: |
        VERSION="${GITHUB_REF#refs/tags/}"
        RELEASE_DATE=$(date '+%Y-%m-%d')
        
        # Get previous tag
        PREVIOUS_TAG=$(git describe --tags --abbrev=0 ${VERSION}^^ 2>/dev/null || echo "v0.9.52")
        
        # Get commits since previous release
        COMMITS=$(git log ${PREVIOUS_TAG}..${VERSION} --pretty=format:"- **%s** (\`%h\`) - %an" --no-merges)
        
        # Generate commit compare URL
        COMPARE_URL="https://github.com/nathanmaster/Klioso/compare/${PREVIOUS_TAG}...${VERSION}"
        
        # Create release notes with dynamic content
        cat > release_notes.md << EOF
        # 🚀 Klioso ${VERSION} - Enhanced Release
        
        **Release Date**: ${RELEASE_DATE}  
        **Version**: ${VERSION}  
        **Previous Version**: ${PREVIOUS_TAG}
        
        ## 📋 **What's Changed**
        
        ${COMMITS:-"- Maintenance and improvements"}
        
        **Full Changelog**: [${PREVIOUS_TAG}...${VERSION}](${COMPARE_URL})
        
        ## 📦 **Release Packages**
        
        - **\`klioso-${VERSION}-production.zip\`** - Production-ready deployment package
        - **\`klioso-${VERSION}-windows.zip\`** - Windows/Laragon optimized with install.bat  
        - **\`klioso-${VERSION}-shared-hosting.zip\`** - cPanel/shared hosting ready
        - **\`klioso-${VERSION}-source.zip\`** - Complete source code archive
        - **\`checksums.txt\`** - SHA256 checksums for package verification
        
        ## 🏗️ **System Requirements**
        - **PHP**: 8.2+ (8.3 recommended)
        - **Database**: MySQL 8+ or SQLite 3+
        - **Web Server**: Apache 2.4+ or Nginx 1.18+
        - **Memory**: 256MB+ PHP memory limit
        - **Storage**: 50MB+ free disk space
        
        ## ⚡ **Quick Installation**
        
        ### Windows/Laragon (Recommended for development)
        1. Download \`klioso-${VERSION}-windows.zip\`
        2. Extract to \`C:\laragon\www\klioso\`
        3. Run \`install.bat\` as Administrator
        4. Configure database in \`.env\` file
        5. Access via \`http://klioso.test\`
        
        ### Linux Production
        1. Download \`klioso-${VERSION}-production.zip\`
        2. Extract to your server directory
        3. Configure web server to point to \`public/\` directory
        4. Set up \`.env\` file with production settings
        5. Run \`php artisan migrate\`
        
        ### Shared Hosting
        1. Download \`klioso-${VERSION}-shared-hosting.zip\`
        2. Upload files to your hosting account
        3. Move \`public/\` contents to document root
        4. Configure database via hosting control panel
        
        ## ⚠️ **Important Notes**
        
        - **🛡️ BACKUP YOUR DATA**: This release includes database schema changes
        - **📋 Database Migrations Required**: Run \`php artisan migrate\` after installation
        - **✅ Production Ready**: Extensively tested and ready for production use
        
        ## 🔐 **Package Verification**
        
        Verify package integrity using SHA256 checksums in \`checksums.txt\`:
        \`\`\`bash
        sha256sum -c checksums.txt
        \`\`\`
        
        ## 📞 **Support & Feedback**
        
        - 🐛 **Bug Reports**: [GitHub Issues](https://github.com/nathanmaster/Klioso/issues)
        - 💬 **Discussions**: [GitHub Discussions](https://github.com/nathanmaster/Klioso/discussions)
        - 📖 **Documentation**: Check \`/docs\` folder in each package
        
        ---
        
        **Klioso ${VERSION}** - Professional WordPress management at scale! 🚀
        
        *This release has been extensively tested and is ready for production use.*
        EOF
        
        echo "Generated release notes with ${COMMITS//[[:cntrl:]]/} commits"
        
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          releases/klioso-${{ github.ref_name }}-production.zip
          releases/klioso-${{ github.ref_name }}-source.zip
          releases/klioso-${{ github.ref_name }}-windows.zip
          releases/klioso-${{ github.ref_name }}-shared-hosting.zip
          releases/checksums.txt
        draft: false
        prerelease: false
        generate_release_notes: false
        body_path: release_notes.md
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
